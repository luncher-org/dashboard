name: Build and Release Extension Charts

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        type: string
      tagged_release:
        required: true
        type: string
      is_test:
        required: false
        type: string
      test_ext_repo:
        required: false
        type: string
      test_ext_branch:
        required: false
        type: string
    outputs:
      build-job-status: 
        value: ${{ jobs.build-extension-artifact.outputs.build-status }}

env:
  ACTIONS_RUNNER_DEBUG: false
  CI_COMMIT_MESSAGE: CI Build Artifacts

defaults:
  run:
    shell: bash
    working-directory: ./

jobs:
  build-extension-artifact:
    name: Build extension artifact
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    outputs:
      build-status: ${{ job.status }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump Env context
        env:
          ENV_CONTEXT: ${{ toJson(env) }}
        run: echo "$ENV_CONTEXT"
      - name: Dump Vars context
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "$VARS_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump needs context
        env:
          NEEDS_CONTEXT: ${{ toJson(needs) }}
        run: echo "$NEEDS_CONTEXT"
      - name: Dump inputs context
        env:
          INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: echo "$INPUTS_CONTEXT"
      
      - if: inputs.is_test == 'true'
        name: Checkout (test flow)
        uses: actions/checkout@v4
        with:
          repository: rancher/${{ inputs.test_ext_repo }}
          ref: ${{ inputs.test_ext_branch }}
          fetch-depth: 0
      
      - if: inputs.is_test != 'true'
        name: Checkout (normal flow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.0

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn

      - name: Parse Extension Name
        if: github.ref_type == 'tag' || inputs.is_test == 'true'
        id: parsed-name
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          yarn parse-tag-name ${{ inputs.tagged_release }} ${{ github.run_id }} "charts"

      - name: Run build script
        shell: bash
        id: build_script
        run: |
          publish="yarn publish-pkgs -s ${{ github.repository }} -b ${{ inputs.target_branch }}"

          if [[ -n "${{ inputs.tagged_release }}" ]]; then
            publish="$publish -t ${{ inputs.tagged_release }}"
          fi

          if [[ "${{ inputs.is_test }}" == "true" ]]; then
            publish="$publish -f"
          fi

          $publish

      - name: Upload charts artifact
        if: github.ref_type == 'tag' || (github.ref == 'refs/heads/main' && github.event_name != 'pull_request') || inputs.is_test == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: charts
          path: tmp

  release:
    name: Release Build
    if: github.ref_type == 'tag' || (github.ref == 'refs/heads/main' && github.event_name != 'pull_request') || inputs.is_test != 'true'
    needs: build-extension-artifact
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      deployments: write
      pages: write
    outputs:
      release-status: ${{ job.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: '${{ inputs.target_branch }}'

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: charts

      - name: Commit build
        run: |
          git add ./{assets,charts,extensions,index.yaml}
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.4.1
        with:
          charts_dir: ./charts/*
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: true